import email
from tkinter import *
from tkinter import messagebox
import random
import pyperclip
import json


# ---------------------------- PASSWORD GENERATOR ------------------------------- #
# Password Generator Project
def generate_password():
    password_entry.delete(0, END)
    letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',
               'v',
               'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
               'R',
               'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
    numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
    symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

    nr_letters = random.randint(8, 10)
    nr_symbols = random.randint(2, 4)
    nr_numbers = random.randint(2, 4)
    letters_generated = [random.choice(letters) for _ in range(nr_letters)]
    symbols_generated = [random.choice(symbols) for _ in range(nr_symbols)]
    numbers_generated = [random.choice(numbers) for _ in range(nr_numbers)]
    password_list = letters_generated + symbols_generated + numbers_generated
    random.shuffle(password_list)
    new_password = ("".join(password_list))
    password_entry.insert(0, new_password)
    pyperclip.copy(new_password)


# print(f"Your password is: {password}")

# ---------------------------- UI SETUP ------------------------------- #
window = Tk()
window.title("Password Manager")
window.config(padx=50, pady=50)
canvas = Canvas(width=200, height=200)
lock_img = PhotoImage(file="logo.png")
# --- Logo --- #
canvas.create_image(100, 100, image=lock_img)
canvas.grid(column=1, row=0)
# --- text labels --- #
website_label = Label(text="Website:")
website_label.grid(row=1, column=0)
email_label = Label(text="Email/Username:")
email_label.grid(row=2, column=0)
password_label = Label(text="Password:")
password_label.grid(row=3, column=0)
password_label.grid(column=0, row=3)


# ---------------------------- SAVE PASSWORD ------------------------------- #

# --- button methods --- #
def search_website():
    try:
        website = website_entry.get()
        with open("PWManager.json", mode='r') as data_file:
            data = json.load(data_file)
            website_data = (data[website])
            messagebox.showinfo(title="Saved Log In Information",
                                message=f"Email: {website_data['email']}\nPassword: {website_data['password']}")
    except KeyError:
        messagebox.showinfo(title="Saved Log In Information",
                            message=f"Log in information for {website} does not exist")


def check_fields():
    if len(website_entry.get()) == 0 or len(password_entry.get()) == 0:
        return FALSE


def add_password():
    website = website_entry.get()
    email = email_entry.get()
    password = password_entry.get()
    new_data = {
        website: {
            "email": email,
            "password": password,
        }

    }
    # standard message box module  of tkinter module, have to import separately
    # messagebox.showinfo(title="Title", message="Message")
    if check_fields() is FALSE:
        messagebox.showinfo(title="Warning", message="You left something empty!")
    else:
        try:
            with open("PWManager.json", mode='r') as data_file:
                # json.dump(new_data, data_file, indent=4)
                # Reading old data
                data = json.load(data_file)
                # Updating old data with new data
                data.update(new_data)
        except FileNotFoundError:
            with open("PWManager.json", "w") as data_file:
                # Saving updated data
                json.dump(new_data, data_file, indent=4)
        else:
            with open("PWManager.json", "w") as data_file:
                # Saving updated data
                json.dump(data, data_file, indent=4)
        finally:
            website_entry.delete(0, END)
            password_entry.delete(0, END)
            email_entry.delete(0, END)


# standard message box module  of tkinter module!
# --- buttons --- #
generate_password_button = Button(text="Generate Password", width=13, command=generate_password)
generate_password_button.grid(row=3, column=2)
add_button = Button(text="Add", width=36, command=add_password)
add_button.grid(row=4, column=1, columnspan=2)
search_button = Button(text="Search", width=13, command=search_website)
search_button.grid(row=1, column=2)
# --- inputs --- #
website_entry = Entry(width=26)
website_entry.grid(row=1, column=1)
website_entry.focus()
email_entry = Entry(width=36)
email_entry.grid(row=2, column=1, columnspan=2)
password_entry = Entry(width=26)
password_entry.grid(row=3, column=1)

window.mainloop()
